name: PR to merge into the next version

on:
  push:
    branches:
      - 'maintenance/*'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Calculating PR branches:"

          # Next branch matching refs/heads/maintenance/* pattern, or empty if we're on the last one
          next_maintenance_branch=$(gh api '/repos/{owner}/{repo}/git/matching-refs/heads/maintenance/' \
            --jq 'map(.ref | ltrimstr("refs/heads/") | select(. > "maintenance/mps20212")) | sort | min')
          echo "  Next maintenance branch: ${next_maintenance_branch:-(none)}"

          # Substitute the default branch if empty
          default_branch=${{ github.event.repository.default_branch }}
          base_branch=${next_maintenance_branch:-$default_branch}
          echo "  PR base branch: $base_branch"

          # Calculate PR head branch name (the branch to merge) by substituting 'maintenance' for 'merge'
          head_branch=${{ github.ref }}
          head_branch=${head_branch/#maintenance/merge}
          echo "  PR head branch: $head_branch"

          echo ""
          
          echo "Pushing ${{ github.ref }} to $head_branch"
          
          # Create or update $head_branch
          gh api --method=POST -f ref="refs/heads/$head_branch" -f sha=${{ github.sha }} '/repos/{owner}/{repo}/git/refs' ||
            gh api --method=PATCH -f sha=${{ github.sha }} "/repos/{owner}/{repo}/git/refs/heads/$head_branch" ||
            (echo "Could not push ${{ github.ref }} (${{ github.sha }}) to $head_branch" 1>&2 ; exit 1)

          # Create PR if it does not exist yet
          if [[ $(gh pr list --head $head_branch --base $base_branch --json id) == '[]' ]]
          then
            gh pr create --head $head_branch --base $base_branch \
              --title "Merge ${{ github.ref_name }} into $base_branch" \
              --body 'This is an automatic PR which merges changes from `${{ github.ref_name }}` to `$base_branch`.' \
              --assignee '@me'
          fi
